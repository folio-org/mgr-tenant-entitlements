spring:
  application:
    name: mgr-tenant-entitlements
  jackson:
    default-property-inclusion: non_null
    deserialization:
      fail-on-unknown-properties: false
  datasource:
    username: ${DB_USERNAME:postgres}
    password: ${DB_PASSWORD:postgres}
    url: jdbc:postgresql://${DB_HOST:postgres}:${DB_PORT:5432}/${DB_DATABASE:okapi_modules}
  liquibase:
    change-log: classpath:changelog/changelog-master.xml
  jpa:
    open-in-view: false
    hibernate:
      ddl-auto: validate
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        jdbc.time_zone: UTC
  kafka:
    bootstrap-servers: ${KAFKA_HOST:kafka}:${KAFKA_PORT:9092}
    security:
      protocol: ${KAFKA_SECURITY_PROTOCOL:PLAINTEXT}
    ssl:
      key-store-password: ${KAFKA_SSL_KEYSTORE_PASSWORD:}
      key-store-location: ${KAFKA_SSL_KEYSTORE_LOCATION:}
      trust-store-password: ${KAFKA_SSL_TRUSTSTORE_PASSWORD:}
      trust-store-location: ${KAFKA_SSL_TRUSTSTORE_LOCATION:}
    producer:
      acks: all
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      properties:
        enable.idempotence: true
        max.in.flight.requests.per.connection: 5
        retries: 5
        spring.json.add.type.headers: false
  cloud:
    openfeign:
      okhttp:
        enabled: true

application:
  router:
    path-prefix: ${ROUTER_PATH_PREFIX:}
  security:
    enabled: ${SECURITY_ENABLED:true}
  kong:
    enabled: ${KONG_INTEGRATION_ENABLED:true}
    url: ${KONG_ADMIN_URL:${kong.url:}}
    module-self-url: ${MODULE_URL:http://mgr-tenant-entitlements:8081}
    register-module: ${REGISTER_MODULE_IN_KONG:true}
    connect-timeout: ${KONG_CONNECT_TIMEOUT:}
    read-timeout: ${KONG_READ_TIMEOUT:360000}
    write-timeout: ${KONG_WRITE_TIMEOUT:}
    retries: ${KONG_RETRIES:}
    tls:
      enabled: ${KONG_TLS_ENABLED:false}
      trust-store-path: ${KONG_TLS_TRUSTSTORE_PATH:}
      trust-store-password: ${KONG_TLS_TRUSTSTORE_PASSWORD:}
      trust-store-type: ${KONG_TLS_TRUSTSTORE_TYPE:}
  okapi:
    enabled: ${OKAPI_INTEGRATION_ENABLED:false}
    url: ${OKAPI_URL:${okapi.url:}}
    mod-authtoken-url: ${MOD_AUTHTOKEN_URL}
  am:
    url: ${AM_CLIENT_URL:${am.url:}}
    tls:
      enabled: ${AM_CLIENT_TLS_ENABLED:false}
      trust-store-path: ${AM_CLIENT_TLS_TRUSTSTORE_PATH}
      trust-store-password: ${AM_CLIENT_TLS_TRUSTSTORE_PASSWORD}
      trust-store-type: ${AM_CLIENT_TLS_TRUSTSTORE_TYPE}
  mt:
    url: ${MT_CLIENT_URL:${tenant.url:}}
    tls:
      enabled: ${MT_CLIENT_TLS_ENABLED:false}
      trust-store-path: ${MT_CLIENT_TLS_TRUSTSTORE_PATH:}
      trust-store-password: ${MT_CLIENT_TLS_TRUSTSTORE_PASSWORD:}
      trust-store-type: ${MT_CLIENT_TLS_TRUSTSTORE_TYPE:}
  keycloak:
    enabled: ${KC_INTEGRATION_ENABLED:true}
    url: ${KC_URL:http://keycloak:8080}
    login:
      client-name-suffix: ${KC_LOGIN_CLIENT_SUFFIX:-login-application}
    tls:
      enabled: ${KC_CLIENT_TLS_ENABLED:false}
      trust-store-path: ${KC_CLIENT_TLS_TRUSTSTORE_PATH:}
      trust-store-password: ${KC_CLIENT_TLS_TRUSTSTORE_PASSWORD:}
      trust-store-type: ${KC_CLIENT_TLS_TRUSTSTORE_TYPE:}
    admin:
      client_id: ${KC_ADMIN_CLIENT_ID:folio-backend-admin-client}
      username: ${KC_ADMIN_USERNAME:}
      password: ${KC_ADMIN_PASSWORD:}
      grant_type: ${KC_ADMIN_GRANT_TYPE:client_credentials}
    import:
      enabled: ${KC_IMPORT_ENABLED:false}
    client:
      client_id: ${KC_CLIENT_ID:mgr-tenant-entitlements}
    jwks-base-url: ${KC_JWKS_BASE_URL:}
    jwt-cache-configuration:
      validate-uri: ${KC_AUTH_TOKEN_VALIDATE_URI:false}
      jwks-refresh-interval: ${KC_JWKS_REFRESH_INTERVAL:60}
      forced-jwks-refresh-interval: ${KC_FORCED_JWKS_REFRESH_INTERVAL:60}
    authorization-cache-max-size: ${KC_AUTHORIZATION_CACHE_MAX_SIZE:50}
    authorization-cache-ttl-offset: ${KC_AUTHORIZATION_CACHE_TTL_OFFSET:5000}
  environment: ${ENV:folio}
  kafka:
    send-duration-timeout: ${KAFKA_SEND_DURATION_TIMEOUT:10s}
    producer-tenant-collection: ${KAFKA_PRODUCER_TENANT_COLLECTION:false}
    topics:
      - name: entitlement
        num-partitions: ${KAFKA_ENTITLEMENT_TOPIC_PARTITIONS:1}
        replication-factor: ${KAFKA_ENTITLEMENT_TOPIC_REPLICATION_FACTOR:}
    tenant-topics:
      - name: mgr-tenant-entitlements.scheduled-job
        num-partitions: ${KAFKA_SCHEDULED_JOB_TOPIC_PARTITIONS:1}
        replication-factor: ${KAFKA_SCHEDULED_JOB_TOPIC_REPLICATION_FACTOR:}
      - name: mgr-tenant-entitlements.capability
        num-partitions: ${KAFKA_CAPABILITY_TOPIC_PARTITIONS:1}
        replication-factor: ${KAFKA_CAPABILITY_TOPIC_REPLICATION_FACTOR:}
      - name: mgr-tenant-entitlements.system-user
        num-partitions: ${KAFKA_SYS_USER_TOPIC_PARTITIONS:1}
        replication-factor: ${KAFKA_SYS_USER_TOPIC_REPLICATION_FACTOR:}
  clients:
    folio:
      connect-timeout: ${FOLIO_CLIENT_CONNECT_TIMEOUT:10s}
      read-timeout: ${FOLIO_CLIENT_READ_TIMEOUT:30s}
      tls:
        enabled: ${FOLIO_CLIENT_TLS_ENABLED:false}
        trust-store-path: ${FOLIO_CLIENT_TLS_TRUSTSTORE_PATH:}
        trust-store-password: ${FOLIO_CLIENT_TLS_TRUSTSTORE_PASSWORD:}
        trust-store-type: ${FOLIO_CLIENT_TLS_TRUSTSTORE_TYPE:}
  secret-store:
    environment: ${SECURE_STORE_ENV:${ENV:folio}}
    type: ${SECRET_STORE_TYPE:}
    aws-ssm:
      region: ${SECRET_STORE_AWS_SSM_REGION:}
      use-iam: ${SECRET_STORE_AWS_SSM_USE_IAM:true}
      ecs-credentials-endpoint: ${SECRET_STORE_AWS_SSM_ECS_CREDENTIALS_ENDPOINT:}
      ecs-credentials-path: ${SECRET_STORE_AWS_SSM_ECS_CREDENTIALS_PATH:}
    vault:
      token: ${SECRET_STORE_VAULT_TOKEN:}
      address: ${SECRET_STORE_VAULT_ADDRESS:}
      enable-ssl: ${SECRET_STORE_VAULT_ENABLE_SSL:false}
      pem-file-path: ${SECRET_STORE_VAULT_PEM_FILE_PATH:}
      keystore-password: ${SECRET_STORE_VAULT_KEYSTORE_PASSWORD:}
      keystore-file-path: ${SECRET_STORE_VAULT_KEYSTORE_FILE_PATH:}
      truststore-file-path: ${SECRET_STORE_VAULT_TRUSTSTORE_FILE_PATH:}
    fssp:
      address: ${SECRET_STORE_FSSP_ADDRESS:}
      secret-path: ${SECRET_STORE_FSSP_SECRET_PATH:secure-store/entries}
      enable-ssl: ${SECRET_STORE_FSSP_ENABLE_SSL:false}
      trust-store-path: ${SECRET_STORE_FSSP_TRUSTSTORE_PATH:}
      trust-store-file-type: ${SECRET_STORE_FSSP_TRUSTSTORE_FILE_TYPE:}
      trust-store-password: ${SECRET_STORE_FSSP_TRUSTSTORE_PASSWORD:}
  flow-engine:
    execution-timeout: ${FLOW_ENGINE_EXECUTION_TIMEOUT:30m}
    last-executions-status-cache-size: ${FLOW_ENGINE_LAST_EXECUTIONS_CACHE_SIZE:25}
    print-flow-result: ${FLOW_ENGINE_PRINT_FLOW_RESULTS:false}
    pool-threads: ${FLOW_ENGINE_THREADS_NUM:4}
  validation:
    interface-integrity:
      entitlement:
        enabled: ${VALIDATION_INTERFACE_INTEGRITY_ENTITLEMENT_ENABLED:true}
        interface-collector:
          mode: ${VALIDATION_INTERFACE_COLLECTOR_MODE:combined}
          required:
            exclude-entitled: ${VALIDATION_INTERFACE_COLLECTOR_EXCLUDE_ENTITLED_REQUIRED:true}
      upgrade:
        enabled: ${VALIDATION_INTERFACE_INTEGRITY_UPGRADE_ENABLED:true}

folio:
  jpa:
    repository:
      base-packages: org.folio.entitlement.repository

server:
  port: ${SERVER_PORT:8081}
  max-http-request-header-size: ${MAX_HTTP_REQUEST_HEADER_SIZE:200KB}
  compression:
    enabled: true
    mime-types: text/html,text/plain,text/css,application/javascript,application/json
  ssl:
    enabled: ${SERVER_SSL_ENABLED:false}
    key-store: ${SERVER_SSL_KEY_STORE}
    key-store-type: ${SERVER_SSL_KEY_STORE_TYPE:BCFKS}
    key-store-provider: ${SERVER_SSL_KEY_STORE_PROVIDER:BCFIPS}
    key-store-password: ${SERVER_SSL_KEY_STORE_PASSWORD}
    key-password: ${SERVER_SSL_KEY_PASSWORD}

management:
  endpoints.web:
    base-path: /admin
    exposure:
      include: info,health,liquibase,threaddump,heapdump,httptrace,loggers

feign:
  compression:
    request:
      enabled: true
    response:
      enabled: true
  client:
    config:
      okapi:
        connectTimeout: 30000
        readTimeout: 300000

retries:
  module:
    max: ${RETRIES_MODULE_MAX:3}
    backoff:
      delay: ${RETRIES_MODULE_BACKOFF_DELAY:1000}
      maxdelay: ${RETRIES_MODULE_BACKOFF_MAXDELAY:30000}
      multiplier: ${RETRIES_MODULE_BACKOFF_MULTIPLIER:5}
  keycloak:
    max: ${RETRIES_KEYCLOAK_MAX:3}
    backoff:
      delay: ${RETRIES_KEYCLOAK_BACKOFF_DELAY:1000}
      maxdelay: ${RETRIES_KEYCLOAK_BACKOFF_MAXDELAY:30000}
      multiplier: ${RETRIES_KEYCLOAK_BACKOFF_MULTIPLIER:5}
