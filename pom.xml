<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>3.5.0</version>
    <relativePath />
  </parent>

  <name>mgr-tenant-entitlements</name>
  <groupId>org.folio</groupId>
  <artifactId>mgr-tenant-entitlements</artifactId>
  <version>4.0.0-SNAPSHOT</version>
  <description>Tenant entitlements manager</description>
  <packaging>jar</packaging>

  <licenses>
    <license>
      <name>Apache License 2.0</name>
      <url>https://spdx.org/licenses/Apache-2.0</url>
    </license>
  </licenses>

  <properties>
    <java.version>21</java.version>
    <maven.compiler.source>21</maven.compiler.source>
    <maven.compiler.target>21</maven.compiler.target>
    <lombok.version>1.18.38</lombok.version>
    <cqlparser.version>1.13</cqlparser.version>
    <mapstruct.version>1.6.3</mapstruct.version>
    <hypersistence-utils-hibernate-63.version>3.9.10</hypersistence-utils-hibernate-63.version>
    <swagger-annotations.version>2.2.32</swagger-annotations.version>
    <apache-commons-lang3.version>3.17.0</apache-commons-lang3.version>
    <apache-commons-collections4.version>4.5.0</apache-commons-collections4.version>
    <cql2pgjson.version>35.4.0</cql2pgjson.version>
    <spring-cloud-bom.version>2025.0.0</spring-cloud-bom.version>
    <openapi-tools.jackson-databind-nullable.version>0.2.6</openapi-tools.jackson-databind-nullable.version>
    <folio-spring-cql.version>9.1.0</folio-spring-cql.version>
    <applications-poc-tools.version>3.1.0-SNAPSHOT</applications-poc-tools.version>
    <folio-java-checkstyle.version>1.1.0</folio-java-checkstyle.version>
    <folio-flow-engine.version>3.1.0-SNAPSHOT</folio-flow-engine.version>
    <jackson-bom.version>2.17.2</jackson-bom.version>
    <caffeine.version>3.1.8</caffeine.version>

    <mgr-tenant-entitlements.yaml-file>${project.basedir}/src/main/resources/swagger.api/mgr-tenant-entitlements.yaml
    </mgr-tenant-entitlements.yaml-file>

    <!-- Test dependencies versions -->
    <testcontainer.version>1.21.1</testcontainer.version>
    <awaitility.version>4.3.0</awaitility.version>
    <wiremock.version>2.35.2</wiremock.version>

    <!-- Plugins versions -->
    <maven-checkstyle.version>10.25.0</maven-checkstyle.version>
    <maven-checkstyle-plugin.version>3.6.0</maven-checkstyle-plugin.version>
    <openapi-generator.version>7.13.0</openapi-generator.version>

    <sonar.exclusions>
      <!--
        exclude:
         - exclude domain classes, which are essentially simple POJO classes
           most of their body is generated with lombok. here is nothing to test or analyse
         - rest resources (generated API)
      -->
      src/main/java/**/cql/**/*,
      src/main/java/**/domain/**/*,
      src/main/java/**/mapper/**/*,
      src/main/java/**/integration/**/model/**/*,
      src/main/java/**/rest/resource/**/*,
      src/main/java/**/TenantEntitlementApplication.java
    </sonar.exclusions>
  </properties>

  <dependencies>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
    </dependency>

    <dependency>
      <groupId>org.springframework.cloud</groupId>
      <artifactId>spring-cloud-starter-openfeign</artifactId>
      <exclusions>
        <exclusion>
          <groupId>org.bouncycastle</groupId>
          <artifactId>bcprov-jdk18on</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter</artifactId>
      <exclusions>
        <exclusion>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-starter-logging</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-log4j2</artifactId>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-data-jpa</artifactId>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-actuator</artifactId>
      <exclusions>
        <exclusion>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-starter-logging</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-configuration-processor</artifactId>
      <optional>true</optional>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-validation</artifactId>
    </dependency>

    <dependency>
      <groupId>org.springframework.kafka</groupId>
      <artifactId>spring-kafka</artifactId>
    </dependency>

    <dependency>
      <groupId>org.liquibase</groupId>
      <artifactId>liquibase-core</artifactId>
    </dependency>

    <dependency>
      <groupId>org.postgresql</groupId>
      <artifactId>postgresql</artifactId>
      <scope>runtime</scope>
    </dependency>

    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>commons-codec</groupId>
      <artifactId>commons-codec</artifactId>
    </dependency>

    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
      <version>${apache-commons-lang3.version}</version>
    </dependency>

    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-collections4</artifactId>
      <version>${apache-commons-collections4.version}</version>
    </dependency>

    <dependency>
      <groupId>org.mapstruct</groupId>
      <artifactId>mapstruct</artifactId>
      <version>${mapstruct.version}</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.z3950.zing</groupId>
      <artifactId>cql-java</artifactId>
      <version>${cqlparser.version}</version>
    </dependency>

    <dependency>
      <groupId>io.hypersistence</groupId>
      <artifactId>hypersistence-utils-hibernate-63</artifactId>
      <version>${hypersistence-utils-hibernate-63.version}</version>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-security</artifactId>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-cache</artifactId>
    </dependency>

    <dependency>
      <groupId>com.github.ben-manes.caffeine</groupId>
      <artifactId>caffeine</artifactId>
    </dependency>

    <dependency>
      <groupId>org.folio</groupId>
      <artifactId>folio-spring-cql</artifactId>
      <version>${folio-spring-cql.version}</version>
    </dependency>

    <dependency>
      <groupId>org.folio</groupId>
      <artifactId>cql2pgjson</artifactId>
      <version>${cql2pgjson.version}</version>
      <exclusions>
        <exclusion>
          <groupId>org.folio</groupId>
          <artifactId>util</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.folio.okapi</groupId>
          <artifactId>okapi-common</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.folio</groupId>
          <artifactId>testing</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>org.folio</groupId>
      <artifactId>folio-tls-utils</artifactId>
      <version>${applications-poc-tools.version}</version>
    </dependency>

    <dependency>
      <groupId>org.folio</groupId>
      <artifactId>folio-security</artifactId>
      <version>${applications-poc-tools.version}</version>
    </dependency>

    <dependency>
      <groupId>org.folio</groupId>
      <artifactId>folio-backend-common</artifactId>
      <version>${applications-poc-tools.version}</version>
    </dependency>

    <dependency>
      <groupId>org.folio</groupId>
      <artifactId>folio-flow-engine</artifactId>
      <version>${folio-flow-engine.version}</version>
    </dependency>

    <dependency>
      <groupId>org.folio</groupId>
      <artifactId>folio-integration-kafka</artifactId>
      <version>${applications-poc-tools.version}</version>
    </dependency>

    <dependency>
      <groupId>org.folio</groupId>
      <artifactId>folio-integration-kong</artifactId>
      <version>${applications-poc-tools.version}</version>
    </dependency>

    <!-- OAS generation -->
    <dependency>
      <groupId>org.openapitools</groupId>
      <artifactId>jackson-databind-nullable</artifactId>
      <version>${openapi-tools.jackson-databind-nullable.version}</version>
    </dependency>

    <dependency>
      <groupId>io.swagger.core.v3</groupId>
      <artifactId>swagger-annotations</artifactId>
      <version>${swagger-annotations.version}</version>
    </dependency>

    <!-- Test dependencies -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.springframework.security</groupId>
      <artifactId>spring-security-test</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.testcontainers</groupId>
      <artifactId>testcontainers</artifactId>
      <exclusions>
        <exclusion>
          <groupId>org.slf4j</groupId>
          <artifactId>slf4j-api</artifactId>
        </exclusion>
      </exclusions>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.folio</groupId>
      <artifactId>folio-backend-testing</artifactId>
      <version>${applications-poc-tools.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.testcontainers</groupId>
      <artifactId>postgresql</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.testcontainers</groupId>
      <artifactId>kafka</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.awaitility</groupId>
      <artifactId>awaitility</artifactId>
      <version>${awaitility.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>com.github.tomakehurst</groupId>
      <artifactId>wiremock-jre8</artifactId>
      <version>${wiremock.version}</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.springframework.cloud</groupId>
        <artifactId>spring-cloud-dependencies</artifactId>
        <version>${spring-cloud-bom.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>org.testcontainers</groupId>
        <artifactId>testcontainers-bom</artifactId>
        <version>${testcontainer.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <build>
    <plugins>
      <plugin>
        <artifactId>maven-clean-plugin</artifactId>
        <executions>
          <execution>
            <id>auto-clean</id>
            <phase>initialize</phase>
            <goals>
              <goal>clean</goal>
            </goals>
          </execution>
        </executions>
      </plugin>


      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
        <configuration>
          <layers>
            <enabled>true</enabled>
          </layers>
          <excludes>
            <exclude>
              <groupId>org.springframework.boot</groupId>
              <artifactId>spring-boot-configuration-processor</artifactId>
            </exclude>
            <exclude>
              <groupId>org.projectlombok</groupId>
              <artifactId>lombok</artifactId>
            </exclude>
            <exclude>
              <groupId>org.mapstruct</groupId>
              <artifactId>mapstruct</artifactId>
            </exclude>
          </excludes>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${maven-compiler-plugin.version}</version>
        <configuration>
          <release>${java.version}</release>
          <annotationProcessorPaths>
            <path>
              <groupId>org.projectlombok</groupId>
              <artifactId>lombok</artifactId>
              <version>${lombok.version}</version>
            </path>
            <path>
              <groupId>org.springframework.boot</groupId>
              <artifactId>spring-boot-configuration-processor</artifactId>
              <version>${project.parent.version}</version>
            </path>
            <path>
              <groupId>org.mapstruct</groupId>
              <artifactId>mapstruct-processor</artifactId>
              <version>${mapstruct.version}</version>
            </path>
          </annotationProcessorPaths>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-checkstyle-plugin</artifactId>
        <version>${maven-checkstyle-plugin.version}</version>
        <dependencies>
          <dependency>
            <groupId>com.puppycrawl.tools</groupId>
            <artifactId>checkstyle</artifactId>
            <version>${maven-checkstyle.version}</version>
          </dependency>

          <dependency>
            <groupId>org.folio</groupId>
            <artifactId>folio-java-checkstyle</artifactId>
            <version>${folio-java-checkstyle.version}</version>
          </dependency>
        </dependencies>
        <executions>
          <execution>
            <id>verify-style</id>
            <phase>process-classes</phase>
            <goals>
              <goal>check</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <sourceDirectories>
            <sourceDirectory>${project.build.sourceDirectory}</sourceDirectory>
            <sourceDirectory>${project.build.testSourceDirectory}</sourceDirectory>
          </sourceDirectories>
          <failsOnError>true</failsOnError>
          <outputEncoding>UTF-8</outputEncoding>
          <inputEncoding>UTF-8</inputEncoding>
          <violationSeverity>warning</violationSeverity>
          <failOnViolation>true</failOnViolation>
          <logViolationsToConsole>true</logViolationsToConsole>
          <configLocation>folio-checkstyle/checkstyle.xml</configLocation>
          <cacheFile>${basedir}/target/cachefile</cacheFile>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${maven-surefire-plugin.version}</version>
        <configuration>
          <useSystemClassLoader>false</useSystemClassLoader>
          <groups>unit</groups>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
        <version>${maven-failsafe-plugin.version}</version>
        <configuration>
          <groups>integration</groups>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-release-plugin</artifactId>
        <configuration>
          <preparationGoals>clean verify</preparationGoals>
          <tagNameFormat>v@{project.version}</tagNameFormat>
          <pushChanges>false</pushChanges>
          <localCheckout>true</localCheckout>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <version>${build-helper-maven-plugin.version}</version>
        <executions>
          <execution>
            <phase>generate-sources</phase>
            <goals>
              <goal>add-source</goal>
            </goals>
            <configuration>
              <sources>
                <source>${project.build.directory}/generated-sources</source>
              </sources>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.openapitools</groupId>
        <artifactId>openapi-generator-maven-plugin</artifactId>
        <version>${openapi-generator.version}</version>
        <executions>
          <execution>
            <id>mgr-tenant-entitlements-openapi</id>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <inputSpec>${mgr-tenant-entitlements.yaml-file}</inputSpec>
              <output>${project.build.directory}/generated-sources</output>
              <generatorName>spring</generatorName>
              <modelPackage>org.folio.entitlement.domain.dto</modelPackage>
              <apiPackage>org.folio.entitlement.rest.resource</apiPackage>
              <generateApis>true</generateApis>
              <generateApiTests>true</generateApiTests>
              <generateApiDocumentation>true</generateApiDocumentation>
              <generateModels>true</generateModels>
              <generateModelTests>false</generateModelTests>
              <generateSupportingFiles>true</generateSupportingFiles>
              <supportingFilesToGenerate>ApiUtil.java</supportingFilesToGenerate>
              <generateModelDocumentation>true</generateModelDocumentation>
              <importMappings>
                ErrorResponse=org.folio.common.domain.model.error.ErrorResponse,
                ApplicationDescriptor=org.folio.common.domain.model.ApplicationDescriptor
              </importMappings>
              <schemaMappings>
                errors=ErrorResponse,
                applicationDescriptor=ApplicationDescriptor
              </schemaMappings>
              <configOptions>
                <java8>true</java8>
                <dateLibrary>java</dateLibrary>
                <interfaceOnly>true</interfaceOnly>
                <serializableModel>true</serializableModel>
                <useTags>true</useTags>
                <useSpringBoot3>true</useSpringBoot3>
              </configOptions>
            </configuration>
          </execution>
          <execution>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <inputSpec>${mgr-tenant-entitlements.yaml-file}</inputSpec>
              <output>${project.build.directory}/docs/mgr-tenant-entitlements</output>
              <generatorName>html2</generatorName>
            </configuration>
          </execution>
        </executions>
      </plugin>

    </plugins>
  </build>

  <repositories>
    <repository>
      <id>folio-nexus</id>
      <name>FOLIO Maven repository</name>
      <url>https://repository.folio.org/repository/maven-folio</url>
    </repository>

    <repository>
      <id>index-data-nexus</id>
      <name>FOLIO Maven repository</name>
      <url>https://maven.indexdata.com</url>
    </repository>
  </repositories>

  <distributionManagement>
    <repository>
      <id>folio-nexus</id>
      <name>FOLIO Release Repository</name>
      <url>https://repository.folio.org/repository/maven-releases/</url>
      <uniqueVersion>false</uniqueVersion>
      <layout>default</layout>
    </repository>
    <snapshotRepository>
      <id>folio-nexus</id>
      <name>FOLIO Snapshot Repository</name>
      <uniqueVersion>true</uniqueVersion>
      <url>https://repository.folio.org/repository/maven-snapshots/</url>
      <layout>default</layout>
    </snapshotRepository>
  </distributionManagement>

  <pluginRepositories>
    <pluginRepository>
      <id>folio-nexus</id>
      <name>FOLIO Maven repository</name>
      <url>https://repository.folio.org/repository/maven-folio</url>
    </pluginRepository>
  </pluginRepositories>

  <scm>
    <url>https://https://github.com/folio-org/mgr-tenant-entitlements</url>
    <connection>scm:git:git://github.com:folio-org/mgr-tenant-entitlements.git</connection>
    <developerConnection>scm:git:git@github.com:folio-org/mgr-tenant-entitlements.git</developerConnection>
    <tag>HEAD</tag>
  </scm>

  <profiles>
    <profile>
      <id>coverage</id>

      <properties>
        <sonar.exclusions>
          <!--
            exclude:
             - exclude domain classes, which are essentially simple POJO classes
               most of their body is generated with lombok. here is nothing to test or analyse
             - rest resources (generated API)
          -->
          src/main/java/**/cql/**/*,
          src/main/java/**/domain/**/*,
          src/main/java/**/mapper/**/*,
          src/main/java/**/integration/**/model/**/*,
          src/main/java/**/rest/resource/**/*,
          src/main/java/**/TenantEntitlementApplication.java
        </sonar.exclusions>
        <sonar.coverage.jacoco.xmlReportPaths>
          target/site/jacoco-aggregate/jacoco.xml
        </sonar.coverage.jacoco.xmlReportPaths>
      </properties>

      <build>
        <plugins>

          <plugin>
            <groupId>org.jacoco</groupId>
            <artifactId>jacoco-maven-plugin</artifactId>
            <version>0.8.13</version>
            <configuration>
              <excludes>
                <exclude>**/cql/**/*</exclude>
                <exclude>**/domain/**/*</exclude>
                <exclude>**/mapper/**/*</exclude>
                <exclude>**/integration/**/model/**/*</exclude>
                <exclude>**/rest/resource/**/*</exclude>
                <exclude>**/TenantEntitlementApplication.class</exclude>
              </excludes>
            </configuration>
            <executions>
              <execution>
                <id>prepare-agent</id>
                <goals>
                  <goal>prepare-agent</goal>
                </goals>
              </execution>
              <execution>
                <id>prepare-agent-integration</id>
                <goals>
                  <goal>prepare-agent-integration</goal>
                </goals>
              </execution>
              <execution>
                <id>report</id>
                <goals>
                  <goal>report</goal>
                </goals>
              </execution>
              <execution>
                <id>report-integration</id>
                <goals>
                  <goal>report-integration</goal>
                </goals>
              </execution>
              <execution>
                <id>merge-results</id>
                <phase>verify</phase>
                <goals>
                  <goal>merge</goal>
                </goals>
                <configuration>
                  <fileSets>
                    <fileSet>
                      <directory>${project.build.directory}</directory>
                      <includes>
                        <include>*.exec</include>
                      </includes>
                    </fileSet>
                  </fileSets>
                  <destFile>${project.build.directory}/jacoco-aggregate.exec</destFile>
                </configuration>
              </execution>
              <execution>
                <id>post-merge-report</id>
                <phase>verify</phase>
                <goals>
                  <goal>report</goal>
                </goals>
                <configuration>
                  <dataFile>${project.build.directory}/jacoco-aggregate.exec</dataFile>
                  <outputDirectory>${project.reporting.outputDirectory}/jacoco-aggregate</outputDirectory>
                </configuration>
              </execution>
              <execution>
                <id>check</id>
                <goals>
                  <goal>check</goal>
                </goals>
                <configuration>
                  <dataFile>${project.build.directory}/jacoco-aggregate.exec</dataFile>
                  <haltOnFailure>false</haltOnFailure>
                  <rules>
                    <rule>
                      <element>BUNDLE</element>
                      <limits>
                        <limit>
                          <counter>INSTRUCTION</counter>
                          <value>COVEREDRATIO</value>
                          <minimum>80%</minimum>
                        </limit>
                      </limits>
                    </rule>
                  </rules>
                </configuration>
              </execution>
            </executions>
          </plugin>

        </plugins>
      </build>
    </profile>

  </profiles>

</project>
